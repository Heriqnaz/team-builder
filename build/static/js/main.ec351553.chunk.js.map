{"version":3,"sources":["constants.js","Redux/Actions/user.js","View/Login/Login.js","Redux/Actions/teams.js","View/Home/Home.js","View/Header/Header.js","View/Form/Form.js","View/Register/Register.js","Redux/Actions/topics.js","View/Topics/Topics.js","Redux/Actions/projects.js","View/Projects/Projects.js","View/Profile/Profile.js","App.js","serviceWorker.js","Redux/Reducers/index.js","Redux/Reducers/reducer.js","index.js","Redux/Store/configureStore.js"],"names":["baseUrl","companiesAreLoading","bool","type","companiesIsLoading","registerHaveError","registerHasError","registerAreLoading","registerIsLoading","loginHaveError","loginHasError","userAreLoading","userIsLoading","loginAreLoading","loginIsLoading","userFetchDataSuccess","user","setUserToken","token","register","data","historyPush","dispatch","axios","post","then","response","status","Error","statusText","catch","getUser","get","headers","localStorage","getItem","Login","state","fields","password","email","fieldErrors","onFormSubmit","evt","preventDefault","props","login","history","push","setState","onInputChange","field","target","name","value","validate","errors","validateEmail","validation","test","String","toLowerCase","this","to","className","onSubmit","htmlFor","id","placeholder","onChange","disabled","React","connect","hasError","isLoading","console","log","setItem","teamsAreLoading","teamsIsLoading","Home","newTopicName","getTeamsData","teams","length","map","team","Card","key","Header","Body","Title","topic","Text","ListGroup","members","member","Item","variant","firstName","Math","floor","random","lastName","teamsFetchDataSuccess","teamsHasError","handleLogout","logout","Navbar","bg","expand","Toggle","aria-controls","Collapse","Nav","activeClassName","NavDropdown","title","avatarUrl","src","alt","onClick","withRouter","removeItem","Form","setUserData","userData","Object","entries","birthDate","sex","jsExperience","reactExperience","companyId","errMessages","keys","filter","k","form","ReactFormInputValidation","useRules","getCompanies","onBlur","handleBlurEvent","handleChangeEvent","companies","company","min","companiesHaveError","companiesHasError","companiesFetchDataSuccess","Register","handelSubmit","topicsHaveError","topicsHasError","topicsAreLoading","topicsIsLoading","getTopicsData","topics","topicsFetchDataSuccess","Topics","handelChangeTopicName","event","handelCreateNewTopic","createNewTopic","handelDeleteTopic","deleteTopic","votedByMe","voteForTopic","Button","votingsCount","icon","faThumbsUp","canDelete","faTrash","InputGroup","FormControl","aria-label","aria-describedby","Append","faPlus","createTopic","delete","projectsHaveError","projectsHasError","projectsAreLoading","projectsIsLoading","getProjectsData","projects","projectsFetchDataSuccess","Projects","voteForProject","project","Profile","handelSaveUserData","updateUserData","put","App","getUserInfo","path","component","exect","render","Component","Boolean","window","location","hostname","match","combineReducers","action","store","initialState","enhancer","applyMiddleware","thunk","createStore","rootReducer","configureStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.ec351553.chunk.js","sourcesContent":["export const baseUrl = 'https://picsart-bootcamp-2020-api.herokuapp.com/api/v1/';","import axios from 'axios';\nimport {baseUrl} from \"../../constants\";\n\nexport function companiesHaveError(bool) {\n    return {\n        type: 'COMPANIES_HAVE_ERROR',\n        companiesHasError: bool\n    };\n}\n\nexport function companiesAreLoading(bool) {\n  return {\n    type: 'COMPANIES_ARE_LOADING',\n    companiesIsLoading: bool\n  };\n}\n\n\nexport function companiesFetchDataSuccess(companies) {\n  return {\n    type: 'COMPANIES_FETCH_DATA_SUCCESS',\n    companies\n  };\n}\n\nexport function registerHaveError(bool) {\n    return {\n        type: 'REGISTER_HAVE_ERROR',\n        registerHasError: bool\n    };\n}\n\nexport function registerAreLoading(bool) {\n  return {\n    type: 'REGISTER_ARE_LOADING',\n    registerIsLoading: bool\n  };\n}\nexport function loginHaveError(bool) {\n    return {\n        type: 'LOGIN_HAVE_ERROR',\n        loginHasError: bool\n    };\n}\n\nexport function userAreLoading(bool) {\n    return {\n        type: 'USER_ARE_LOADING',\n        userIsLoading: bool\n    };\n}\n\nexport function loginAreLoading(bool) {\n    return {\n        type: 'LOGIN_ARE_LOADING',\n        loginIsLoading: bool\n    };\n}\n\nexport function userFetchDataSuccess(user) {\n    return {\n        type: 'USER_FETCH_DATA_SUCCESS',\n        user\n    };\n}\nexport function setUserToken(token) {\n    return {\n        type: 'SET_TOKEN_SUCCESS',\n        token\n    };\n}\n\nexport function getCompaniesData() {\n    return (dispatch) => {\n        dispatch(companiesAreLoading(true));\n\n        axios.get(`${baseUrl}companies`)\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw Error(response.statusText);\n                }\n\n                dispatch(companiesAreLoading(false));\n\n                return response;\n            })\n            .then((response) => dispatch(companiesFetchDataSuccess(response.data)))\n            .catch(() => dispatch(companiesHaveError(true)));\n    };\n}\nexport function register(data, historyPush) {\n    return (dispatch) => {\n      dispatch(registerAreLoading(true));\n\n      axios.post(`${baseUrl}users/register`, data)\n        .then((response) => {\n          if (response.status !== 200) {\n            throw Error(response.statusText);\n          }\n          dispatch(registerAreLoading(false))\n          return response;\n        })\n        .then((response) => historyPush('/login'))\n        .catch(() => dispatch(registerHaveError(true)))\n    };\n}\nexport function updateUserData(data) {\n    return (dispatch) => {\n\n      axios.put(`${baseUrl}users/update`, data, {headers: {token: localStorage.getItem('token')}})\n        .then((response) => {\n          if (response.status !== 200) {\n            throw Error(response.statusText);\n          }\n          return response;\n        })\n        .then((response) => dispatch(getUser()))\n        .catch(() => dispatch(registerHaveError(true)))\n    };\n}\n\nexport function login(data, historyPush) {\n    return (dispatch) => {\n      dispatch(loginAreLoading(true))\n      axios.post(`${baseUrl}users/login`, data)\n        .then((response) => {\n          if (response.status !== 200) {\n            throw Error(response.statusText);\n          }\n          dispatch(loginAreLoading(false))\n          return response;\n        })\n        .then((response) => {\n          console.log('response.data', response.data)\n          localStorage.setItem('token', response.data.token);\n          historyPush(\"/home\");\n          dispatch(setUserToken(response.data.token))\n          dispatch(userFetchDataSuccess(response.data))\n        })\n        .catch(() => dispatch(loginHaveError(true)));\n    };\n}\nexport function getUser() {\n    return (dispatch) => {\n      dispatch(userAreLoading(true));\n      axios.get(`${baseUrl}users`, {headers: {token: localStorage.getItem('token')}})\n        .then((response) => {\n          if (response.status !== 200) {\n            throw Error(response.statusText);\n          }\n          dispatch(userAreLoading(false));\n          return response;\n        })\n        .then((response) => {\n          dispatch(setUserToken(localStorage.getItem('token')));\n          dispatch(userFetchDataSuccess(response.data))\n        })\n        .catch(() => dispatch(loginHaveError(true)));\n    };\n}\nexport function logout(historyPush) {\n    return (dispatch) => {\n      axios.get(`${baseUrl}users/logout`, {headers: {token: localStorage.getItem('token')}})\n        .then((response) => {\n          if (response.status !== 200) {\n            throw Error(response.statusText);\n          }\n          return response;\n        })\n        .then((response) => {\n          localStorage.removeItem('token');\n          dispatch(setUserToken(''));\n          historyPush('/login');\n          dispatch(userFetchDataSuccess({}));\n        })\n        .catch(() => dispatch(loginHaveError(true)));\n    };\n}","import * as React from \"react\";\nimport {Link, Redirect} from \"react-router-dom\";\n\nimport {connect} from \"react-redux\";\nimport {login} from \"../../Redux/Actions/user\";\n\nclass Login extends React.Component {\n  state = {\n    fields: {\n      password: '',\n      email: ''\n    },\n    fieldErrors: {},\n  }\n\n  onFormSubmit = (evt) => {\n    evt.preventDefault();\n    this.props.login(this.state.fields, this.props.history.push);\n    this.setState({\n      fields: {\n        password: '',\n        email: ''\n      },\n    });\n  };\n\n  onInputChange = (evt) => {\n    const fields = {...this.state.fields};\n    const field = evt.target.name;\n    fields[evt.target.name] = evt.target.value;\n    this.setState({ fields }, ()=>  {\n      this.validate(field);\n    });\n  };\n\n  validate = (field) => {\n    const errors = {...this.state.fieldErrors};\n    if (field === 'email'  && !this.validateEmail(this.state.fields[field])) {\n      errors[field] = `Invalid ${field}`;\n      this.setState({\n        fieldErrors: errors\n      })\n    } else {\n      errors[field] = \"\"\n      this.setState({\n        fieldErrors: errors\n      })\n    }\n  }\n\n  validation = () => {\n    const field = {...this.state.fields};\n\n    if (!field.password) return true;\n    if (!field.email) return true;\n\n    return false;\n  };\n\n  validateEmail = (email) => {\n    const re = /^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3})|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  render() {\n    return (\n      this.props.token || localStorage.getItem('token') ?  <Redirect to=\"/home\" /> :\n      <div className=\"d-flex flex-column justify-content-center align-items-center\">\n        <h2 className=\"text-center\">Login</h2>\n        <form className=\"form-horizontal w-25\" onSubmit={this.onFormSubmit}>\n          <div className=\"form-group\">\n            <label className=\"control-label col-sm-2\" htmlFor=\"email\">Email:</label>\n            <div className=\"col-sm-12\">\n              <input type=\"text\"\n                     className=\"form-control\"\n                     id=\"email\"\n                     placeholder=\"Enter email\"\n                     name=\"email\"\n                     value={this.state.fields.email}\n                     onChange={this.onInputChange}\n              />\n              <p className=\"text-danger\">{ this.state.fieldErrors.email}</p>\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label className=\"control-label col-sm-2\" htmlFor=\"password\">Password:</label>\n            <div className=\"col-sm-12\">\n              <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Enter password\" name=\"password\" value={this.state.fields.password} onChange={this.onInputChange}/>\n              <p className=\"text-danger\">{ this.state.fieldErrors.password}</p>\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-offset-2 col-sm-10\">\n              <button type=\"submit\" className=\"text-center btn btn-info\" disabled={this.validation()}>Login</button>\n            </div>\n          </div>\n        </form>\n        <p className=\"text-center\">DON'T HAVE AN ACCOUNT? <Link to=\"/register\"> REGISTER NOW </Link></p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    hasError: state.loginHaveError,\n    isLoading: state.loginAreLoading,\n    user: state.user,\n    token: state.token,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: (data, historyPush) => dispatch(login(data, historyPush))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import axios from 'axios';\nimport {baseUrl} from \"../../constants\";\n\nexport function teamsHaveError(bool) {\n  return {\n    type: 'TEAMS_HAVE_ERROR',\n    teamsHasError: bool\n  };\n}\n\nexport function teamsAreLoading(bool) {\n  return {\n    type: 'TEAMS_ARE_LOADING',\n    teamsIsLoading: bool\n  };\n}\n\n\nexport function teamsFetchDataSuccess(teams) {\n  return {\n    type: 'TEAMS_FETCH_DATA_SUCCESS',\n    teams\n  };\n}\n\nexport function getTeamsData() {\n  return (dispatch) => {\n    dispatch(teamsAreLoading(true));\n\n    axios.get(`${baseUrl}teams`, {headers: {token: localStorage.getItem('token')}})\n      .then((response) => {\n        if (response.status !== 200) {\n          throw Error(response.statusText);\n        }\n\n        dispatch(teamsAreLoading(false));\n\n        return response;\n      })\n      .then((response) => dispatch(teamsFetchDataSuccess(response.data)))\n      .catch(() => dispatch(teamsHaveError(true)));\n  };\n}","import * as React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {getTeamsData} from \"../../Redux/Actions/teams\";\nimport {Card, ListGroup} from \"react-bootstrap\";\n\n\nclass Home extends React.Component {\n  state = {\n    newTopicName: ''\n  }\n\n  componentDidMount() {\n    this.props.getTeamsData();\n  }\n\n  render() {\n    return (\n      !this.props.token && !localStorage.getItem('token') ?  <Redirect to=\"/login\" />:\n        <div>\n          {this.props.teamsIsLoading ? <div className=\"spinner-border text-primary m-auto\"></div> :\n            this.props.teams && this.props.teams.length && this.props.teams.map((team) => (\n              <Card className=\"text-center\" key={team.id}>\n                <Card.Header>{team.name}</Card.Header>\n                <Card.Body>\n                  <Card.Title>{team.topic}</Card.Title>\n                  <Card.Text>\n                    Members :\n                    <ListGroup>\n                      {team.members && team.members.length && team.members.map((member) => (\n                        <ListGroup.Item variant=\"info\" key={member.firstName + Math.floor(Math.random() * 100)}>{`${member.firstName} ${member.lastName}`}</ListGroup.Item>\n                    ))}\n                  </ListGroup>\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n            ))}\n        </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    teams: state.teams,\n    teamsIsLoading: state.teamsIsLoading,\n    token: state.token\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getTeamsData: () => dispatch(getTeamsData()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import * as React from \"react\";\nimport {NavLink, Redirect, withRouter} from \"react-router-dom\";\nimport {Nav, Navbar, NavDropdown} from \"react-bootstrap\";\nimport {logout} from \"../../Redux/Actions/user\";\nimport {connect} from \"react-redux\";\n\nclass Header extends React.Component {\n\n  handleLogout = () => {\n    this.props.logout(this.props.history.push);\n  }\n\n  render() {\n    return (\n      !this.props.token && !localStorage.getItem('token') ?  <Redirect to=\"/login\" />:\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <NavLink\n              to=\"/home\"\n              activeClassName='active'\n              className=\"nav-link\"\n            >\n              Home\n            </NavLink>\n            <NavLink\n              to=\"/topics\"\n              activeClassName='active'\n              className=\"nav-link\"\n            >\n              Topics\n            </NavLink>\n            <NavLink\n              to=\"/projects\"\n              activeClassName='active'\n              className=\"nav-link\"\n            >\n              Projects\n            </NavLink>\n          </Nav>\n          <NavDropdown title={\n            this.props.user.avatarUrl ?\n            <div className=\"pull-left\">\n              <img className=\"thumbnail-image\"\n                   src={this.props.user.avatarUrl}\n                   alt=\"user pic\"\n              />\n            </div> : <div></div>\n          }  id=\"basic-nav-dropdown\" className=\"pl-5\">\n            <NavLink className=\"dropdown-item\" to='/profile'>Profile</NavLink>\n            <NavDropdown.Item className=\"dropdown-item\" to='/logout' onClick={this.handleLogout}>Logout</NavDropdown.Item>\n          </NavDropdown>\n        </Navbar.Collapse>\n      </Navbar>\n    )\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    token: state.token\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logout: (historyPush) => dispatch(logout(historyPush)),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Header));\n","import * as React from \"react\";\n\nimport {connect} from \"react-redux\";\nimport {getCompaniesData, register} from \"../../Redux/Actions/user\";\nimport ReactFormInputValidation from \"react-form-input-validation\";\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fields: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        birthDate: '',\n        sex: 'male',\n        avatarUrl: '',\n        jsExperience: 0,\n        reactExperience: 0,\n        companyId: 1,\n      },\n      fieldErrors: {},\n      errors: {},\n    }\n\n    this.form = new ReactFormInputValidation(this);\n    this.form.useRules({\n      firstName: \"required\",\n      lastName: \"required\",\n      email: \"required|email\",\n      password: \"required\",\n      birthDate: \"required\",\n      sex: \"required\",\n      avatarUrl: \"required|url\",\n      jsExperience: \"required|numeric|min:0\",\n      reactExperience: \"required|numeric\",\n      companyId: \"required\",\n    });\n  }\n\n  componentDidMount() {\n    this.props.getCompanies();\n    this.setUserData();\n  }\n\n  setUserData = () => {\n    if (this.props.userData &&  this.props.userData.firstName) {\n      const userData = {...this.props.userData};\n      this.setState({\n        fields: userData\n      });\n    }\n  }\n\n  onFormSubmit = (evt) => {\n    evt.preventDefault();\n    const fields = {...this.state.fields};\n    if (Object.entries(this.state.errors).length !== 0) {\n      if ((this.props.userData && Object.entries(this.props.userData).length !== 0 && !this.state.errors.password) || (!this.props.userData || Object.entries(this.props.userData).length === 0)) {\n        return;\n      }\n    }\n    console.log('777777777777777', fields);\n    console.log('errors', this.state.errors);\n\n    this.setState({\n      fields\n    })\n    this.props.onSubmit(this.state.fields);\n    !this.props.userData || Object.entries(this.props.userData).length === 0 ?\n    this.setState({\n      fields: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        birthDate: '',\n        sex: 'male',\n        avatarUrl: '',\n        jsExperience: 0,\n        reactExperience: 0,\n        companyId: 1,\n      },\n    }) : this.setUserData();\n  };\n\n  validation = () => {\n    const field = this.state.fields;\n    const fieldErrors = this.state.errors;\n    const errMessages = Object.keys(fieldErrors).filter((k) => fieldErrors[k]);\n\n    if (!field.firstName) return true;\n    if (!field.lastName) return true;\n    if (!field.avatarUrl) return true;\n    if (!field.sex) return true;\n    if (!field.companyId) return true;\n    if (!field.email) return true;\n    if (!field.birthDate) return true;\n    if (!field.password && ( !this.props.userData || Object.entries(this.props.userData).length === 0)) return true;\n    if (!field.jsExperience && field.jsExperience !== 0) return true;\n    if (!field.reactExperience && field.reactExperience !== 0) return true;\n    if (errMessages.length) return true;\n\n    return false;\n  };\n\n  render() {\n    return (\n      <div className=\"d-flex flex-column justify-content-center align-items-center\">\n        {this.props.registerIsLoading ?\n          <div className=\"loader\">\n            <div className=\"spinner-border text-primary\"></div>\n          </div> : <div></div>\n        }\n        <form className=\"form-horizontal\" onSubmit={this.onFormSubmit}>\n          <div className=\"form-group row\">\n            <div className=\"col-6\">\n              <label className=\"control-label\" htmlFor=\"firstName\">First Name:</label>\n              <input\n                type=\"text\"\n                name=\"firstName\"\n                className=\"form-control\"\n                onBlur={this.form.handleBlurEvent}\n                onChange={this.form.handleChangeEvent}\n                value={this.state.fields.firstName}\n              />\n              <p className=\"text-danger\">{ this.state.errors.firstName}</p>\n            </div>\n            <div className=\"col-6\">\n              <label className=\"control-label\" htmlFor=\"lastName\">Last Name:</label>\n              <input\n                type=\"text\"\n                name=\"lastName\"\n                className=\"form-control\"\n                onBlur={this.form.handleBlurEvent}\n                onChange={this.form.handleChangeEvent}\n                value={this.state.fields.lastName}\n              />\n              <p className=\"text-danger\">{ this.state.errors.lastName}</p>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <div className=\"col-6\">\n              <label className=\"control-label\" htmlFor=\"avatarUrl\">Avatar URL:</label>\n              <input\n                type=\"text\"\n                name=\"avatarUrl\"\n                className=\"form-control\"\n                onBlur={this.form.handleBlurEvent}\n                onChange={this.form.handleChangeEvent}\n                value={this.state.fields.avatarUrl}\n              />\n              <p className=\"text-danger\">{ this.state.errors.avatarUrl}</p>\n            </div>\n            <div className=\"col-6\">\n              <label htmlFor=\"sel1\">Sex:</label>\n              <select\n                className=\"form-control\"\n                id=\"sex\"\n                name=\"sex\"\n                value={this.state.fields.sex}\n                onChange={this.form.handleChangeEvent}\n                onBlur={this.form.handleBlurEvent}\n              >\n                <option value='male'>Male</option>\n                <option value='female'>Female</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <div className=\"col-6\">\n              <label className=\"control-label\" htmlFor=\"avatarUrl\">Birth Date:</label>\n              <br/>\n              <input\n                className=\"form-control col-12\"\n                type=\"date\"\n                name=\"birthDate\"\n                onChange={this.form.handleChangeEvent}\n                onBlur={this.form.handleBlurEvent}\n                value={this.state.fields.birthDate}\n              />\n              <p className=\"text-danger\">{ this.state.errors.birthDate}</p>\n            </div>\n            <div className=\"col-6\">\n              <label htmlFor=\"sel1\">Company:</label>\n              <select\n                className=\"form-control\"\n                id=\"companyId\"\n                name=\"companyId\"\n                value={this.state.fields.companyId}\n                onChange={this.form.handleChangeEvent}\n                onBlur={this.form.handleBlurEvent}\n              >\n                { this.props.companiesIsLoading ?\n                  <option>Loading…</option> :\n                  this.props.companies.map((company) => (\n                    <option value={company.id} key={company.id}>{company.name}</option>\n                  ))}\n              </select>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <div className=\"col-6\">\n              <label className=\"control-label\" htmlFor=\"password\">Js Experience:</label>\n              <input\n                min=\"0\"\n                type=\"number\"\n                name=\"jsExperience\"\n                className=\"form-control\"\n                onBlur={this.form.handleBlurEvent}\n                onChange={this.form.handleChangeEvent}\n                value={this.state.fields.jsExperience}\n              />\n              <p className=\"text-danger\">{ this.state.errors.jsExperience}</p>\n            </div>\n            <div className=\"col-6\">\n              <label className=\"control-label\" htmlFor=\"password\">React Experience:</label>\n              <input\n                min=\"0\"\n                type=\"number\"\n                name=\"reactExperience\"\n                className=\"form-control\"\n                onBlur={this.form.handleBlurEvent}\n                onChange={this.form.handleChangeEvent}\n                value={this.state.fields.reactExperience}\n              />\n              <p className=\"text-danger\">{ this.state.errors.reactExperience}</p>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <div className={!this.props.userData || Object.entries(this.props.userData).length === 0 ? 'col-6' : 'col-12'}>\n              <label className=\"control-label\" htmlFor=\"email\">Email:</label>\n              <input\n                className=\"form-control\"\n                type=\"email\"\n                name=\"email\"\n                onBlur={this.form.handleBlurEvent}\n                onChange={this.form.handleChangeEvent}\n                value={this.state.fields.email}\n              />\n              <p className=\"text-danger\">{ this.state.errors.email}</p>\n            </div>\n            <div className={!this.props.userData ||  Object.entries(this.props.userData).length === 0 ? 'col-sm-6' : 'd-none'}>\n              <label className=\"control-label\" htmlFor=\"password\">Password:</label>\n              <input\n                className=\"form-control\"\n                type=\"password\"\n                name=\"password\"\n                onBlur={this.form.handleBlurEvent}\n                onChange={this.form.handleChangeEvent}\n                value={this.state.fields.password}\n              />\n              <p className=\"text-danger\">{ this.state.errors.password}</p>\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-12 text-center\">\n              <button type=\"submit\" className=\"btn btn-info w-50\" disabled={this.validation()}>{this.props.userData ? 'Save' : 'Register'}</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    companies: state.companies,\n    companiesHaveError: state.companiesHasError,\n    companiesIsLoading: state.companiesAreLoading,\n    registerHaveError: state.registerHasError,\n    registerIsLoading: state.registerAreLoading,\n    token: state.token\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getCompanies: () => dispatch(getCompaniesData()),\n    register: (data) => dispatch(register(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","import * as React from \"react\";\nimport {Link, Redirect} from \"react-router-dom\";\n\nimport {connect} from \"react-redux\";\nimport {register} from \"../../Redux/Actions/user\";\nimport Form from \"../Form/Form\";\n\nclass Register extends React.Component {\n\n  handelSubmit = (fields) => {\n    this.props.register(fields, this.props.history.push);\n  }\n\n  render() {\n    return (\n      this.props.token || localStorage.getItem('token') ?  <Redirect to=\"/home\" /> :\n      <div className=\"d-flex flex-column justify-content-center align-items-center\">\n        <h2 className=\"text-center\">Register</h2>\n        <Form\n          onSubmit={this.handelSubmit}\n        />\n        <p>ALREADY HAVE AN ACCOUNT! <Link to=\"/login\"> LOGIN </Link></p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.token\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    register: (data, historyPush) => dispatch(register(data, historyPush))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","import axios from 'axios';\nimport {baseUrl} from \"../../constants\";\n\nexport function topicsHaveError(bool) {\n  return {\n    type: 'TOPICS_HAVE_ERROR',\n    topicsHasError: bool\n  };\n}\n\nexport function topicsAreLoading(bool) {\n  return {\n    type: 'TOPICS_ARE_LOADING',\n    topicsIsLoading: bool\n  };\n}\n\n\nexport function topicsFetchDataSuccess(topics) {\n  return {\n    type: 'TOPICS_FETCH_DATA_SUCCESS',\n    topics\n  };\n}\n\nexport function getTopicsData() {\n  return (dispatch) => {\n    dispatch(topicsAreLoading(true));\n\n    axios.get(`${baseUrl}topics`, {headers: {token: localStorage.getItem('token')}})\n      .then((response) => {\n        if (response.status !== 200) {\n          throw Error(response.statusText);\n        }\n\n        dispatch(topicsAreLoading(false));\n\n        return response;\n      })\n      .then((response) => dispatch(topicsFetchDataSuccess(response.data)))\n      .catch(() => dispatch(topicsHaveError(true)));\n  };\n}\n\nexport function voteForTopic(id, type) {\n  return (dispatch) => {\n    dispatch(topicsAreLoading(true));\n\n    axios.post(`${baseUrl}topics/${id}/voting`, {type}, {headers: {token: localStorage.getItem('token')}})\n      .then((response) => {\n        if (response.status !== 200) {\n          throw Error(response.statusText);\n        }\n\n        dispatch(topicsAreLoading(false));\n\n        return response;\n      })\n      .then((response) => dispatch(getTopicsData()))\n      .catch(() => dispatch(topicsHaveError(true)));\n  };\n}\n\nexport function createTopic(title) {\n  return (dispatch) => {\n    dispatch(topicsAreLoading(true));\n\n    axios.post(`${baseUrl}topics`, {title}, {headers: {token: localStorage.getItem('token')}})\n      .then((response) => {\n        if (response.status !== 200) {\n          throw Error(response.statusText);\n        }\n\n        dispatch(topicsAreLoading(false));\n\n        return response;\n      })\n      .then((response) => dispatch(getTopicsData()))\n      .catch(() => dispatch(topicsHaveError(true)));\n  };\n}\nexport function deleteTopic(id) {\n  return (dispatch) => {\n    dispatch(topicsAreLoading(true));\n\n    axios.delete(`${baseUrl}topics/${id}`,  {headers: {token: localStorage.getItem('token')}})\n      .then((response) => {\n        if (response.status !== 200) {\n          throw Error(response.statusText);\n        }\n\n        dispatch(topicsAreLoading(false));\n\n        return response;\n      })\n      .then((response) => dispatch(getTopicsData()))\n      .catch(() => dispatch(topicsHaveError(true)));\n  };\n}","import * as React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {getTopicsData, voteForTopic, createTopic, deleteTopic} from \"../../Redux/Actions/topics\";\nimport {Button, FormControl, InputGroup, ListGroup} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport { faThumbsUp, faTrash, faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\n\nclass Topics extends React.Component {\n\n  state = {\n    newTopicName: ''\n  }\n\n  componentDidMount() {\n    this.props.getTopicsData();\n  }\n\n  handelChangeTopicName = (event) => {\n    this.setState({\n      newTopicName: event.target.value\n    })\n  }\n\n  handelCreateNewTopic = () => {\n    this.props.createNewTopic(this.state.newTopicName);\n    this.setState({newTopicName: ''});\n  }\n\n  handelDeleteTopic = (id) => {\n    return (() => {\n      this.props.deleteTopic(id);\n    })\n  }\n\n  votedByMe = (id, bool) => {\n    return (() => {\n      const type = bool ? \"unlike\" : \"like\";\n      this.props.voteForTopic(id, type);\n    })\n  }\n\n  render() {\n    return (\n      !this.props.token && !localStorage.getItem('token') ?  <Redirect to=\"/login\" />:\n        <div>\n          <ListGroup>\n            {this.props.topicsIsLoading ? <div className=\"spinner-border text-primary m-auto\"></div> :\n              this.props.topics && this.props.topics.length && this.props.topics.map((topic) => (\n                <ListGroup.Item variant=\"info\" key={topic.id}>\n                  {topic.title}\n                  <Button variant={topic.votingsCount ? \"success\" : 'danger'} className=\"float-right\">{topic.votingsCount}</Button>\n                  <Button variant={topic.votedByMe ? \"primary\" : 'light'} className=\"float-right\" onClick={this.votedByMe(topic.id, topic.votedByMe)}><FontAwesomeIcon icon={faThumbsUp} /></Button>\n                  <Button variant=\"primary\" className={topic.canDelete ? \"float-right\" : \"d-none\"} onClick={this.handelDeleteTopic(topic.id)}><FontAwesomeIcon icon={faTrash} /></Button>\n                </ListGroup.Item>\n              ))}\n          </ListGroup>\n          <InputGroup className=\"mb-3\">\n            <FormControl\n              placeholder=\"Recipient's username\"\n              aria-label=\"Recipient's username\"\n              aria-describedby=\"basic-addon2\"\n              value={this.state.newTopicName}\n              onChange={this.handelChangeTopicName}\n            />\n            <InputGroup.Append>\n              <Button variant=\"primary\" disabled={!this.state.newTopicName} onClick={this.handelCreateNewTopic} ><FontAwesomeIcon icon={faPlus} /></Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </div>\n\n\n    )\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    topics: state.topics,\n    topicsIsLoading: state.topicsIsLoading,\n    token: state.token\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getTopicsData: () => dispatch(getTopicsData()),\n    voteForTopic: (id, type) => dispatch(voteForTopic(id, type)),\n    createNewTopic: (title) => dispatch(createTopic(title)),\n    deleteTopic: (id) => dispatch(deleteTopic(id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Topics);","import axios from 'axios';\nimport {baseUrl} from \"../../constants\";\n\nexport function projectsHaveError(bool) {\n  return {\n    type: 'PROJECTS_HAVE_ERROR',\n    projectsHasError: bool\n  };\n}\n\nexport function projectsAreLoading(bool) {\n  return {\n    type: 'PROJECTS_ARE_LOADING',\n    projectsIsLoading: bool\n  };\n}\n\n\nexport function projectsFetchDataSuccess(projects) {\n  return {\n    type: 'PROJECTS_FETCH_DATA_SUCCESS',\n    projects\n  };\n}\n\nexport function getProjectsData() {\n  return (dispatch) => {\n    dispatch(projectsAreLoading(true));\n\n    axios.get(`${baseUrl}projects`, {headers: {token: localStorage.getItem('token')}})\n      .then((response) => {\n        if (response.status !== 200) {\n          throw Error(response.statusText);\n        }\n\n        dispatch(projectsAreLoading(false));\n\n        return response;\n      })\n      .then((response) => dispatch(projectsFetchDataSuccess(response.data)))\n      .catch(() => dispatch(projectsHaveError(true)));\n  };\n}\n\nexport function voteForProject(id, type) {\n  return (dispatch) => {\n    dispatch(projectsAreLoading(true));\n\n    axios.post(`${baseUrl}projects/${id}/voting`, {type}, {headers: {token: localStorage.getItem('token')}})\n      .then((response) => {\n        if (response.status !== 200) {\n          throw Error(response.statusText);\n        }\n\n        dispatch(projectsAreLoading(false));\n\n        return response;\n      })\n      .then((response) => dispatch(getProjectsData()))\n      .catch(() => dispatch(projectsHaveError(true)));\n  };\n}","import * as React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {getProjectsData, voteForProject} from \"../../Redux/Actions/projects\";\nimport {Button, ListGroup} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport { faThumbsUp } from \"@fortawesome/free-solid-svg-icons\";\n\nclass Projects extends React.Component {\n\n  state = {\n    newTopicName: ''\n  }\n\n  componentDidMount() {\n    this.props.getProjectsData();\n  }\n\n  votedByMe = (id, bool) => {\n    return (() => {\n      const type = bool ? \"unlike\" : \"like\";\n      this.props.voteForProject(id, type);\n    })\n  }\n\n\n  render() {\n    return (\n      !this.props.token && !localStorage.getItem('token') ?  <Redirect to=\"/login\" />:\n        <div>\n          <ListGroup>\n            {this.props.projectsIsLoading ? <div className=\"spinner-border text-primary m-auto\"></div> :\n              this.props.projects && this.props.projects.length && this.props.projects.map((project) => (\n                <ListGroup.Item variant=\"info\" key={project.id}>\n                  {project.title}\n                  <Button variant={project.votedByMe ? \"primary\" : 'light'} className=\"float-right\" onClick={this.votedByMe(project.id, project.votedByMe)}><FontAwesomeIcon icon={faThumbsUp} /></Button>\n                </ListGroup.Item>\n              ))}\n          </ListGroup>\n        </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    projects: state.projects,\n    projectsIsLoading: state.projectsIsLoading,\n    token: state.token\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getProjectsData: () => dispatch(getProjectsData()),\n    voteForProject: (id, type) => dispatch(voteForProject(id, type)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Projects);","import * as React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {updateUserData} from \"../../Redux/Actions/user\";\nimport Form from \"../Form/Form\";\n\nclass Profile extends React.Component {\n\n  handelSaveUserData = (data) => {\n    delete data.password;\n    delete data.token;\n    this.props.updateUserData(data);\n  }\n\n  render() {\n    return (\n      !this.props.token && !localStorage.getItem('token') ?  <Redirect to=\"/login\" /> :\n        <div>\n          { this.props.userIsLoading ? <div className=\"spinner-border text-primary m-auto\"></div> :\n            <div className=\"d-flex flex-column justify-content-center align-items-center\">\n              <h2 className=\"text-center\">User Profile</h2>\n              {\n                Object.entries(this.props.user).length !== 0 ? <Form onSubmit={this.handelSaveUserData} userData={this.props.user}/> : ''\n              }\n\n            </div>}\n        </div>\n\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    userAreLoading: state.userAreLoading,\n    token: state.token\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateUserData: (data) => dispatch(updateUserData(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Style/style.css';\nimport {Redirect, Route, BrowserRouter as Router, Switch} from \"react-router-dom\";\nimport Login from \"./View/Login/Login\";\nimport Home from \"./View/Home/Home\";\nimport Header from \"./View/Header/Header\";\nimport Register from \"./View/Register/Register\";\nimport Topics from \"./View/Topics/Topics\";\nimport Projects from \"./View/Projects/Projects\";\nimport Profile from \"./View/Profile/Profile\";\nimport {getUser} from \"./Redux/Actions/user\";\nimport {connect} from \"react-redux\";\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    localStorage.getItem('token') && props.getUserInfo();\n  }\n\n  render() {\n    return (\n      <Router>\n        <Header></Header>\n        <div className=\"container\">\n          <Switch>\n            <Route  path='/login' component={Login} />\n            <Route  path='/register' component={Register} />\n            <Route exect path='/home' component={Home} />\n            <Route exect  path='/topics' component={Topics} />\n            <Route exect  path='/projects' component={Projects} />\n            <Route exect  path='/profile' component={Profile} />\n            <Route exect  path='/' render={() => {\n              return (\n                <Redirect\n                  to='/home'\n                />\n              );\n            }} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    token: state.token\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getUserInfo: () => dispatch(getUser()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\nimport {\n  companies,\n  companiesHaveError,\n  companiesAreLoading,\n  loginAreLoading,\n  loginHaveError,\n  user,\n  registerAreLoading,\n  registerHaveError,\n  token,\n  topics,\n  topicsIsLoading,\n  projects,\n  projectsIsLoading,\n  teams,\n  teamsIsLoading,\n  userAreLoading\n}\n  from './reducer';\n\nexport default combineReducers({\n  companies,\n  companiesHaveError,\n  companiesAreLoading,\n  loginAreLoading,\n  loginHaveError,\n  user,\n  registerHaveError,\n  registerAreLoading,\n  token,\n  topics,\n  topicsIsLoading,\n  projects,\n  projectsIsLoading,\n  teams,\n  teamsIsLoading,\n  userAreLoading\n});","export function companiesHaveError(state = false, action) {\n    switch (action.type) {\n        case 'COMPANIES_HAVE_ERROR':\n            return action.companiesHasError;\n\n        default:\n            return state;\n    }\n}\n\nexport function companiesAreLoading(state = false, action) {\n    switch (action.type) {\n        case 'COMPANIES_ARE_LOADING':\n            return action.companiesIsLoading;\n\n        default:\n            return state;\n    }\n}\n\nexport function companies(state = [], action) {\n    switch (action.type) {\n        case 'COMPANIES_FETCH_DATA_SUCCESS':\n            return action.companies;\n\n        default:\n            return state;\n    }\n}\nexport function registerHaveError(state = false, action) {\n    switch (action.type) {\n        case 'REGISTER_HAVE_ERROR':\n            return action.registerHasError;\n\n        default:\n            return state;\n    }\n}\n\nexport function registerAreLoading(state = false, action) {\n    switch (action.type) {\n        case 'REGISTER_ARE_LOADING':\n            return action.registerIsLoading;\n\n        default:\n            return state;\n    }\n}\nexport function loginHaveError(state = false, action) {\n    switch (action.type) {\n        case 'LOGIN_HAVE_ERROR':\n            return action.loginHasError;\n\n        default:\n            return state;\n    }\n}\n\nexport function loginAreLoading(state = false, action) {\n    switch (action.type) {\n        case 'LOGIN_ARE_LOADING':\n            return action.loginIsLoading;\n\n        default:\n            return state;\n    }\n}\nexport function userAreLoading(state = false, action) {\n    switch (action.type) {\n        case 'USER_ARE_LOADING':\n            return action.userIsLoading;\n\n        default:\n            return state;\n    }\n}\n\nexport function user(state = {}, action) {\n    switch (action.type) {\n        case 'USER_FETCH_DATA_SUCCESS':\n            return action.user;\n\n        default:\n            return state;\n    }\n}\n\nexport function token(state = '', action) {\n  switch (action.type) {\n    case 'SET_TOKEN_SUCCESS':\n      return action.token;\n\n    default:\n      return state;\n  }\n}\nexport function topics(state = '', action) {\n  switch (action.type) {\n    case 'TOPICS_FETCH_DATA_SUCCESS':\n      return action.topics;\n\n    default:\n      return state;\n  }\n}\nexport function topicsHasError(state = '', action) {\n  switch (action.type) {\n    case 'TOPICS_HAVE_ERROR':\n      return action.topicsHasError;\n\n    default:\n      return state;\n  }\n}\nexport function topicsIsLoading(state = '', action) {\n  switch (action.type) {\n    case 'TOPICS_ARE_LOADING':\n      return action.topicsIsLoading;\n\n    default:\n      return state;\n  }\n}\nexport function projects(state = '', action) {\n  switch (action.type) {\n    case 'PROJECTS_FETCH_DATA_SUCCESS':\n      return action.projects;\n\n    default:\n      return state;\n  }\n}\nexport function projectsHasError(state = '', action) {\n  switch (action.type) {\n    case 'PROJECTS_HAVE_ERROR':\n      return action.projectsHasError;\n\n    default:\n      return state;\n  }\n}\nexport function projectsIsLoading(state = '', action) {\n  switch (action.type) {\n    case 'PROJECTS_ARE_LOADING':\n      return action.projectsIsLoading;\n\n    default:\n      return state;\n  }\n}\nexport function teams(state = '', action) {\n  switch (action.type) {\n    case 'TEAMS_FETCH_DATA_SUCCESS':\n      return action.teams;\n\n    default:\n      return state;\n  }\n}\nexport function teamsHasError(state = '', action) {\n  switch (action.type) {\n    case 'TEAMS_HAVE_ERROR':\n      return action.teamsHasError;\n\n    default:\n      return state;\n  }\n}\nexport function teamsIsLoading(state = '', action) {\n  switch (action.type) {\n    case 'TEAMS_ARE_LOADING':\n      return action.teamsIsLoading;\n\n    default:\n      return state;\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './Redux/Store/configureStore';\nimport { Provider } from 'react-redux';\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../Reducers';\n\nexport default function configureStore(initialState) {\n    const enhancer = applyMiddleware(thunk)\n\n    return createStore(\n        rootReducer,\n        initialState,\n        enhancer\n    );\n}"],"sourceRoot":""}